//imagine reverse engineering D: 
using System;
using System.Collections.Generic;
using System.Text;

namespace HelloWorld
{
  class Program
  {
    public static List<Tuple<string, string, string, double>> users = new List<Tuple<string, string, string, double>>();
    static void Main(string[] args)
    {
        user_database db = new user_database();
        while(true)
        {
            Console.WriteLine("Welcome to Haxagon banking Aplication which is 100% secure.\n"); //Welcome message
            Console.WriteLine("To login into app write \"SIGNIN\" if you need make your own account write \"SIGNUP\""); //choose between SIGNIN and SIGNUP
            Console.Write("Enter option: ");
            string regOrSign = Console.ReadLine();

            if (regOrSign == "SIGNUP")
            {
                Console.Write("Please enter your username: ");
                if (createUsername.Contains(" "))
                {
                    Console.WriteLine("Your password cannot contain space");
                }
                string createUsername = Console.ReadLine();
                Console.Write("Please enter your password: ");
                string createPassword = Console.ReadLine();
                Console.Write("Please enter your pin (4 digits): ");
                string createId = Console.ReadLine();
                
                bool isNumeric = Int32.TryParse(createPassword, out _);

                if (createId.Length == 4 && isNumeric)
                {
                    users.Add(Tuple.Create(Encrypt(createUsername), Encrypt(createPassword). Encrypt(createId)));
                } 
                
                else
                {
                    Console.WriteLine("Your password contains text or length is'nt 4 digits");
                }
                

            }
            
            else if(regOrSign == "SIGNIN")
            {
                Console.Write("username: "); //print username
                bool contains = false;
                string username = Console.ReadLine();
                foreach(var item in users)
                {
                    
                    if(item[0] == Encrypt(username))
                    {
                        contains = true;
                    }
                }
                
                if(contains)
                {
                    Console.Write("password: "); //print password
                    string password = Console.ReadLine();
                    
                }
                
                else
                {
                    Console.WriteLine("User not found!");
                }
            }
      
            string komand = Console.ReadLine();
        
            if (komand == "needhelp") //pokud uživatel zadá needhelp vypíše se mu vzorový příkaz kterým jdou převést peníze mezi účty
            {
                Console.Write("Alice > Bob 100");
                Console.Write("from > to <amount>");
            }
      
            else if(komand.Split(" ")[1] == ">")
            {
                Prevod(komand.Split(" ")[2], Convert.ToDouble(komand.Split(" ")[3]));
            }  
            
            else if(komand.Split(" ")[0] == ">")
            {
                Prevod("none", username, Convert.ToDouble(komand.Split(" ")[2]));
            }
        }
    }
    
    void Prevod(string from, string user, double ammount)
    {
        
        if(from != "none")
        {
            users[users.IndexOf(from)].Item4 -= ammount;
        }
        users[users.IndexOf(user)].Item4 += ammount;
    }

    // Code by cisc0disco
    public static string Encrypt(string encryptText)
    {
        string result = "";
        MD5 md5 = MD5.Create();

        foreach (byte item in md5.ComputeHash(Encoding.ASCII.GetBytes(pin)))
        {
            result += item.ToString("X2").ToLower();
        }

        return result;
    }
  }
}
